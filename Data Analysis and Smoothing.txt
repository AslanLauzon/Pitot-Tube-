import pandas as pd 

import matplotlib.pyplot as plt 

import numpy as np 

 

# Constants 

AIR_DENSITY = 1.293  # kg/m^3 

dark_mode = False  # Set to False for light mode 

 

# Read the data, skipping the first row (title) 

df = pd.read_csv('DATALOG.txt', skiprows=1, header=None) 

 

# Assign column names based on the provided order 

df.columns = ['TIME', 'TEMP', 'HUMIDITY', 'PRESSURE'] 

 

# Convert time from ms to seconds for a more conventional time scale in the plot 

df['TIME'] = df['TIME'] / 1000 

 

# Calculate original velocity V = sqrt((2*deltaP)/rho) 

df['VELOCITY_ORIGINAL'] = np.sqrt((2 * df['PRESSURE']) / AIR_DENSITY) 

 

# Apply a moving average to smooth the pressure data 

window_size = 10  # Adjust the window size as needed 

df['SMOOTHED_PRESSURE'] = df['PRESSURE'].rolling(window=window_size, center=True).mean().fillna(method='bfill').fillna(method='ffill') 

 

# Calculate velocity V = sqrt((2*deltaP)/rho) using smoothed pressure 

df['VELOCITY_SMOOTHED'] = np.sqrt((2 * df['SMOOTHED_PRESSURE']) / AIR_DENSITY) 

 

highest_velocity_original = df['VELOCITY_ORIGINAL'].max() 

highest_velocity_smoothed = df['VELOCITY_SMOOTHED'].max() 

 

print(f"Highest Original Velocity: {highest_velocity_original:.3f} m/s") 

print(f"Highest Smoothed Velocity: {highest_velocity_smoothed:.3f} m/s") 

 

# Setting the style based on the dark_mode variable 

if dark_mode: 

    plt.style.use('dark_background') 

    text_color = 'white' 

    grid_color = 'gray' 

    note_color = 'lightgray' 

else: 

    plt.style.use('default') 

    text_color = 'black' 

    grid_color = 'lightgray' 

    note_color = 'gray' 

 

# Plotting 

plt.figure(figsize=(10, 6)) 

plt.plot(df['TIME'], df['VELOCITY_ORIGINAL'], label='Original Velocity', color='red', marker='o', markersize=3, linewidth=1) 

plt.plot(df['TIME'], df['VELOCITY_SMOOTHED'], label='Smoothed Velocity', color='blue' if dark_mode else 'cyan', marker='x', markersize=3, linewidth=1) 

plt.title('Rocket Velocity', color=text_color) 

plt.xlabel('Time (s)', color=text_color) 

plt.ylabel('Velocity (m/s)', color=text_color) 

plt.legend() 

plt.grid(True, color=grid_color) 

plt.text(0.02, 0.98, 'Aslan Lauzon', horizontalalignment='left', verticalalignment='top', transform=plt.gca().transAxes, fontsize=8, color=note_color) 

plt.show() 